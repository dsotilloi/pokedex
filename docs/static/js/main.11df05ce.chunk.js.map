{"version":3,"sources":["assets/images/redPokeball.svg","assets/images/town.png","assets/images/bluePokeball.svg","assets/images/greenPokeball.svg","assets/images/yellowPokeball.svg","components/Card.jsx","components/Home.jsx","components/Loading.jsx","components/PokemonPicker.jsx","components/Pokemons.jsx","components/Pokedex.jsx","App.jsx","index.jsx"],"names":["module","exports","Card","pokemonInfo","name","skills","abilities","className","src","sprites","front_default","alt","back_default","map","skill","key","ability","console","clear","Home","town","to","Loading","pokemonColor","pokemonName","bluePokeball","greenPokeball","yellowPokeball","redPokeball","showPokeball","PokemonPicker","handleName","onClick","Pokemons","error","isNameLoading","pokemonsList","pokemon","Pokedex","handleColor","handleReset","useState","setError","undefined","isColorLoading","setIsColorLoading","setIsNameLoading","setPokemonInfo","setPokemonsList","visibility","getPokemons","a","fetch","request","json","response","results","warn","getPokemonsByColor","pokemon_species","setTimeout","getPokemonByName","useEffect","length","App","color","setPokemonColor","setPokemonName","path","element","i","nameRemover","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.11df05ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/redPokeball.00867a4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/town.6029a9b4.png\";","module.exports = __webpack_public_path__ + \"static/media/bluePokeball.dd22ef18.svg\";","module.exports = __webpack_public_path__ + \"static/media/greenPokeball.c6762428.svg\";","module.exports = __webpack_public_path__ + \"static/media/yellowPokeball.7804a57b.svg\";","import React from \"react\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Card({ pokemonInfo }) {\r\n  const name = pokemonInfo.name;\r\n  const skills = pokemonInfo.abilities;\r\n\r\n  return (\r\n    <div>\r\n      {name && (\r\n        <>\r\n          <div>\r\n            <img\r\n              className=\"card__images\"\r\n              src={pokemonInfo.sprites.front_default}\r\n              alt=\"\"\r\n            />\r\n            <img\r\n              className=\"card__images\"\r\n              src={pokemonInfo.sprites.back_default}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <h1 className=\"card__h1 title-h1\">{name}</h1>\r\n          <ul className=\"card__skillsUl\">\r\n            {skills.map((skill) => (\r\n              <li className=\"card__skillsLi\" key={skill.ability.name}>\r\n                {skill.ability.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport town from \"../assets/images/town.png\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"shadow\"></div>\r\n      <img className=\"background-image\" src={town} alt=\"town\" />\r\n      <div className=\"home__title\">\r\n        <h1 className=\"title-h1\">POKEDEX</h1>\r\n        <Link to=\"/pokedex\">\r\n          <button className=\"btn home__title-btn\">Enter</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport bluePokeball from \"../assets/images/bluePokeball.svg\";\r\nimport greenPokeball from \"../assets/images/greenPokeball.svg\";\r\nimport redPokeball from \"../assets/images/redPokeball.svg\";\r\nimport yellowPokeball from \"../assets/images/yellowPokeball.svg\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Loading({ pokemonColor, pokemonName }) {\r\n  const showPokeball = (pokemonColor) => {\r\n    if (!pokemonColor || pokemonColor === \"red\") {\r\n      return redPokeball;\r\n    }\r\n\r\n    if (pokemonColor === \"blue\") {\r\n      return bluePokeball;\r\n    }\r\n\r\n    if (pokemonColor === \"green\") {\r\n      return greenPokeball;\r\n    }\r\n\r\n    if (pokemonColor === \"yellow\") {\r\n      return yellowPokeball;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loading\">\r\n      <img\r\n        className={`loading__pokeball animate__animated animate__shakeY displayNone`}\r\n        src={showPokeball(pokemonColor)}\r\n        alt=\"pokeball\"\r\n      />\r\n      {pokemonName ? (\r\n        <p>Loading Pokemon...</p>\r\n      ) : (\r\n        <p>Loading {pokemonColor} Pokemons...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport redPokeball from \"../assets/images/redPokeball.svg\";\r\n\r\nexport default function PokemonPicker({ name, handleName }) {\r\n  return (\r\n    <li className=\"pokemon-picker__li\" onClick={() => handleName(name)}>\r\n      <img\r\n        alt=\"pokeball\"\r\n        className=\"pokemon-picker__li-pokeball\"\r\n        src={redPokeball}\r\n      />\r\n      <Link to={`pokemon=${name}`}>\r\n        <p>{name}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\nimport Loading from \"./Loading\";\r\nimport PokemonPicker from \"./PokemonPicker\";\r\n\r\nexport default function Pokemons({\r\n  error,\r\n  handleName,\r\n  isNameLoading,\r\n  pokemonColor,\r\n  pokemonInfo,\r\n  pokemonsList,\r\n  pokemonName\r\n}) {\r\n  return (\r\n    <>\r\n      <aside className=\"pokemons__aside\">\r\n        <h2 className=\"pokemons__aside--h2\">Pokemons</h2>\r\n        <ul className=\"pokemons__aside--pokemonPiker-Ul\">\r\n          {pokemonsList.map((pokemon) => (\r\n            <PokemonPicker\r\n              key={pokemon.name}\r\n              handleName={handleName}\r\n              name={pokemon.name}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </aside>\r\n      <section className=\"pokemons__cardContainer\">\r\n        {!pokemonName ? (\r\n          <p>Select a {pokemonColor} Pokemon</p>\r\n        ) : isNameLoading ? (\r\n          <Loading pokemonName={pokemonName} />\r\n        ) : error ? (\r\n          <p>Pokemon not found, ¡please choose another!</p>\r\n        ) : (\r\n          <Card pokemonInfo={pokemonInfo} />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport bluePokeball from \"../assets/images/bluePokeball.svg\";\r\nimport greenPokeball from \"../assets/images/greenPokeball.svg\";\r\nimport redPokeball from \"../assets/images/redPokeball.svg\";\r\nimport town from \"../assets/images/town.png\";\r\nimport yellowPokeball from \"../assets/images/yellowPokeball.svg\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport Pokemons from \"./Pokemons\";\r\n\r\nconsole.clear();\r\n\r\nexport default function Pokedex({\r\n  handleColor,\r\n  handleName,\r\n  handleReset,\r\n  pokemonColor,\r\n  pokemonName\r\n}) {\r\n  const [error, setError] = useState(false);\r\n  const [isColorLoading, setIsColorLoading] = useState(undefined);\r\n  const [isNameLoading, setIsNameLoading] = useState(undefined);\r\n  const [pokemonInfo, setPokemonInfo] = useState({});\r\n  const [pokemonsList, setPokemonsList] = useState([]);\r\n  const visibility = pokemonColor ? \"visible\" : \"invisible\";\r\n\r\n  const getPokemons = async () => {\r\n    try {\r\n      const request = await fetch(\r\n        \"https://pokeapi.co/api/v2/pokemon/?limit=60\"\r\n      );\r\n      const response = await request.json();\r\n      const { results } = response;\r\n      setPokemonsList(results);\r\n    } catch {\r\n      console.warn(\"Error getPokemons\");\r\n    }\r\n  };\r\n\r\n  const getPokemonsByColor = async (pokemonColor) => {\r\n    if (pokemonColor && !pokemonName) {\r\n      setIsColorLoading(true);\r\n      try {\r\n        const request = await fetch(\r\n          `https://pokeapi.co/api/v2/pokemon-color/${pokemonColor}/`\r\n        );\r\n        const response = await request.json();\r\n        setPokemonsList(response.pokemon_species);\r\n\r\n        setTimeout(() => setIsColorLoading(false), 2000);\r\n      } catch {\r\n        console.warn(\"Error getPokemonsByColor\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getPokemonByName = async (pokemonName) => {\r\n    if (pokemonName) {\r\n      setIsNameLoading(true);\r\n      try {\r\n        const request = await fetch(\r\n          `https://pokeapi.co/api/v2/pokemon/${pokemonName}`\r\n        );\r\n        const response = await request.json();\r\n        setPokemonInfo(response);\r\n\r\n        setTimeout(() => {\r\n          setIsNameLoading(false);\r\n          setError(false);\r\n        }, 1500);\r\n      } catch {\r\n        console.warn(\"Error getPokemonByName\");\r\n\r\n        setTimeout(() => {\r\n          setIsNameLoading(false);\r\n          setError(true);\r\n        }, 1500);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPokemons();\r\n    getPokemonsByColor(pokemonColor);\r\n    getPokemonByName(pokemonName);\r\n  }, [pokemonColor, pokemonName]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <div className=\"shadow\"></div>\r\n        <img className=\"background-image\" src={town} alt=\"header\" />\r\n        <div className=\"pokedex__hero\">\r\n          <Link to=\"/\">\r\n            <h1 className=\"title-h1\">Pokedex</h1>\r\n          </Link>\r\n\r\n          <p className=\"pokedex__hero-subtitle\">\r\n            Pick one and choose your Pokemon by color:\r\n          </p>\r\n\r\n          <button\r\n            className=\"pokedex__hero-pokeball\"\r\n            onClick={() => handleColor(0, \"\")}\r\n          >\r\n            <img src={redPokeball} alt=\"red pokeball\" />\r\n          </button>\r\n\r\n          <button\r\n            className=\"pokedex__hero-pokeball\"\r\n            onClick={() => handleColor(1, \"\")}\r\n          >\r\n            <img src={bluePokeball} alt=\"blue pokeball\" />\r\n          </button>\r\n\r\n          <button\r\n            className=\"pokedex__hero-pokeball\"\r\n            onClick={() => handleColor(2, \"\")}\r\n          >\r\n            <img src={greenPokeball} alt=\"green pokeball\" />\r\n          </button>\r\n\r\n          <button\r\n            className=\"pokedex__hero-pokeball\"\r\n            onClick={() => handleColor(3, \"\")}\r\n          >\r\n            <img src={yellowPokeball} alt=\"yellow pokeball\" />\r\n          </button>\r\n\r\n          <button\r\n            className={`btn pokedex__hero-btn ${visibility}`}\r\n            onClick={() => handleReset()}\r\n          >\r\n            Remove color\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"pokedex__main\">\r\n        {!pokemonColor ? (\r\n          pokemonsList.length ? (\r\n            <Pokemons\r\n              error={error}\r\n              handleName={handleName}\r\n              isNameLoading={isNameLoading}\r\n              pokemonColor={pokemonColor}\r\n              pokemonInfo={pokemonInfo}\r\n              pokemonsList={pokemonsList}\r\n              pokemonName={pokemonName}\r\n            />\r\n          ) : (\r\n            <Loading pokemonColor={pokemonColor} />\r\n          )\r\n        ) : isColorLoading ? (\r\n          <Loading pokemonColor={pokemonColor} />\r\n        ) : (\r\n          <Pokemons\r\n            error={error}\r\n            handleName={handleName}\r\n            isNameLoading={isNameLoading}\r\n            pokemonColor={pokemonColor}\r\n            pokemonInfo={pokemonInfo}\r\n            pokemonsList={pokemonsList}\r\n            pokemonName={pokemonName}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Card from \"./components/Card\";\nimport Home from \"./components/Home\";\nimport Pokedex from \"./components/Pokedex\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const color = [\"red\", \"blue\", \"green\", \"yellow\"];\n  const [pokemonColor, setPokemonColor] = useState(\"\");\n  const [pokemonName, setPokemonName] = useState(\"\");\n\n  const handleColor = (i, nameRemover) => {\n    setPokemonColor(color[i]);\n    setPokemonName(nameRemover);\n  };\n\n  const handleName = (name) => {\n    setPokemonName(name);\n  };\n\n  const handleReset = () => {\n    setPokemonColor(\"\");\n    setPokemonName(\"\");\n  };\n\n  return (\n    <div className={`App ${pokemonColor}`}>\n      <Routes>\n        <Route\n          path=\"/pokedex\"\n          element={\n            <Pokedex\n              handleColor={handleColor}\n              handleName={handleName}\n              handleReset={handleReset}\n              pokemonColor={pokemonColor}\n              pokemonName={pokemonName}\n            />\n          }\n        >\n          <Route path=\"pokemon=:name\" element={<Card />} />\n        </Route>\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}